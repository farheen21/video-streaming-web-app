package com.webapp.application.videostreamingwebapp.config;import com.amazonaws.auth.AWSCredentials;import com.amazonaws.auth.AWSStaticCredentialsProvider;import com.amazonaws.auth.BasicAWSCredentials;import com.amazonaws.services.s3.AmazonS3;import com.amazonaws.services.s3.AmazonS3Client;import com.amazonaws.services.s3.AmazonS3ClientBuilder;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;@Configurationpublic class S3Config {//    @Value("${cloud.aws.region.static}")//    private String region;////    @Value("${accessKey}")//    private String accessKey;////    @Value("${secretKey}")//    private String secretKey;    @Value("${amazon.aws.accesskey}")    private String accessKey;    @Value("${amazon.aws.secretkey}")    private String secretKey;    @Value("${amazon.aws.s3.region}")    private String region;//    AmazonS3Client amazonS3Client()    @Bean    public  AmazonS3 s3client(){//        AWSCredentials awsCredentials = new BasicAWSCredentials("accessKey", "secretKey");//        return new AmazonS3Client(awsCredentials);//        BasicAWSCredentials awsCreds = new BasicAWSCredentials(accessKey, secretKey);        AmazonS3 s3Client = AmazonS3ClientBuilder.standard()                .withRegion(region)                .withCredentials(new AWSStaticCredentialsProvider(awsCreds))                .build();        return s3Client;    }//    @Bean//    public AmazonS3 amazonS3() {//        AWSCredentialsProvider awsCredentialsProvider = new DefaultAWSCredentialsProviderChain();//        return AmazonS3ClientBuilder.standard()//                .withRegion(region)//                .withCredentials(awsCredentialsProvider)//                .build();//    }//    @Configuration//    public class AmazonS3Config {//        @Value("${amazon.aws.accesskey}")//        private String accessKey;//        @Value("${amazon.aws.secretkey}")//        private String secretKey;//        @Value("${amazon.aws.s3.region}")//        private String region;////        @Bean//        public AmazonS3 s3client() {//            BasicAWSCredentials awsCreds = new BasicAWSCredentials(accessKey, secretKey);//            AmazonS3 s3Client = AmazonS3ClientBuilder.standard()//                    .withRegion(region)//                    .withCredentials(new AWSStaticCredentialsProvider(awsCreds))//                    .build();//            return s3Client;//        }//    }}